@model IEnumerable<PersonModel>

@{
    ViewBag.Title = "Column encoding";
}

<div class="example content-block">
    <div class="widget">
        <div class="widget-header">
            <i class="fa fa-bars"></i>
            Grid
            <span class="widget-buttons">
                <i class="content-toggle"></i>
            </span>
        </div>
        <div class="widget-content">
            @(Html
                .Grid(Model)
                .Build(columns =>
                {
                    columns.Add(model => Html.CheckBox("Person_" + model.Id));

                    columns.Add(model => model.Name).Titled("Name");
                    columns.Add(model => model.Surname).Titled("Surname");

                    columns.Add(model => model.Age).Titled("Encoded age").RenderedAs(model => "<span>" + model.Age + "</span>");
                    columns.Add(model => model.Age).Titled("Not encoded age").Encoded(false).RenderedAs(model => "<span style='color: #CC4444'>" + model.Age + "</span>");
                    columns.Add(model => model.Birthday).Titled("Birth date");
                    columns.Add(model => model.IsWorking).Titled("Employed");
                })
            )
        </div>
    </div>
</div>
<div class="example-code content-block">
    <div class="widget">
        <div class="widget-header">
            <i class="fa fa-code"></i>
            View
            <span class="widget-buttons">
                <i class="content-toggle"></i>
            </span>
        </div>
        <div class="widget-content">
<pre>
<code>
@@using NonFactors.Mvc.Grid;

@@model <span class="cls">IEnumerable</span>&lt;<span class="cls">PersonModel</span>&gt;

@@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => Html.CheckBox(<span class="str">"Person_"</span> + model.Id));

        columns.Add(model => model.Name).Titled(<span class="str">"Name"</span>);
        columns.Add(model => model.Surname).Titled(<span class="str">"Surname"</span>);
        columns.Add(model => model.Age).Titled(<span class="str">"Encoded age"</span>).RenderedAs(model => <span class="str">"&lt;span&gt;"</span> + model.Age + <span class="str">"&lt;/span&gt;"</span>);
        columns.Add(model => model.Age).Titled(<span class="str">"Not encoded age"</span>).Encoded(<span class="kwd">false</span>).RenderedAs(model => <span class="str">"&lt;span style='color: #CC4444'&gt;"</span> + model.Age + <span class="str">"&lt;/span&gt;"</span>);
        columns.Add(model => model.Birthday).Titled(<span class="str">"Birth date"</span>);
        columns.Add(model => model.IsWorking).Titled(<span class="str">"Employed"</span>);
    })
)
</code>
</pre>
        </div>
    </div>
</div>
